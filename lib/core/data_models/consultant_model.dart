import 'dart:convert';

///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class ConsultantAvailabilityTime {
/*
{
  "from": 7,
  "to": 10
} 
*/

  List<int?>? hours;

  ConsultantAvailabilityTime({this.hours});
  ConsultantAvailabilityTime.fromJson(Map<String, dynamic> json) {
    if (json['time'] != null && (json['time'] is List)) {
      final v = json['time'];
      final arr0 = <int?>[];
      v.forEach((v) {
        arr0.add(int.tryParse(v.toString()));
      });
      hours = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (hours != null) {
      final v = hours;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['time'] = arr0;
    }
    return data;
  }
}

class ConsultantAvailability {
/*
{
  "days": [
    1
  ]
} 
*/

  List<int?>? days;

  ConsultantAvailability({
    this.days,
  });
  ConsultantAvailability.fromJson(Map<String, dynamic> json) {
    if (json['days'] != null && (json['days'] is List)) {
      final v = json['days'];
      final arr0 = <int?>[];
      v.forEach((v) {
        arr0.add(int.tryParse(v.toString()));
      });
      days = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (days != null) {
      final v = days;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['days'] = arr0;
    }
    return data;
  }
}

class ConsultantLanguages {
/*
{
  "lang": [
    "en"
  ]
} 
*/

  List<String?>? lang;

  ConsultantLanguages({
    this.lang,
  });
  ConsultantLanguages.fromJson(Map<String, dynamic> json) {
    if (json['lang'] != null && (json['lang'] is List)) {
      final v = json['lang'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      lang = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (lang != null) {
      final v = lang;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['lang'] = arr0;
    }
    return data;
  }
}

class Consultant {
  int? id;
  String? name;
  String? phone;
  String? gender;
  String? profileImg;
  String? email;
  String? educationalQualification;
  String? specialty;
  String? dateOfFirstRegistration;
  String? categoryOfMembership;
  String? NPARegNum;
  String? lastDues;
  String? reciept;
  String? address;
  String? experience;
  ConsultantLanguages? languages;
  String? bio;
  int? hourlyRate;
  ConsultantAvailability? availability;
  ConsultantAvailabilityTime? availabilityTime;
  String? accountName;
  String? accountNumber;
  String? bank;
  String? booked;
  int? notification;
  String? regToken;
  // List<ConsultantSchedule?>? schedule;
  int? approvalStatus;
  String? createdAt;
  String? updatedAt;
  double? rating;

  Consultant({
    this.id,
    this.name,
    this.phone,
    this.gender,
    this.rating,
    this.profileImg,
    this.email,
    this.educationalQualification,
    this.specialty,
    this.dateOfFirstRegistration,
    this.categoryOfMembership,
    this.NPARegNum,
    this.lastDues,
    this.reciept,
    this.address,
    this.experience,
    this.languages,
    this.bio,
    this.hourlyRate,
    this.availability,
    this.availabilityTime,
    this.accountName,
    this.accountNumber,
    this.bank,
    this.booked,
    this.notification,
    this.regToken,
    // this.schedule,
    this.approvalStatus,
    this.createdAt,
    this.updatedAt,
  });
  Consultant.fromJson(Map<String, dynamic> json) {
    id = int.tryParse(json['id']?.toString() ?? '');
    name = json['name']?.toString();
    rating = double.tryParse(json['rating']?.toString() ?? '0.0');
    phone = json['phone']?.toString();
    gender = json['gender']?.toString();
    profileImg = json['profile_img']?.toString();
    email = json['email']?.toString();
    educationalQualification = json['educational_qualification']?.toString();
    specialty = json['specialty']?.toString();
    dateOfFirstRegistration = json['date_of_first_registration']?.toString();
    categoryOfMembership = json['category_of_membership']?.toString();
    NPARegNum = json['NPA_reg_num']?.toString();
    lastDues = json['last_dues']?.toString();
    reciept = json['reciept']?.toString();
    address = json['address']?.toString();
    experience = json['experience']?.toString();
    languages = (json['languages'] != null && (json['languages'] is Map))
        ? ConsultantLanguages.fromJson(json['languages'])
        : null;
    bio = json['bio']?.toString();
    hourlyRate = int.tryParse(json['hourly_rate']?.toString() ?? '');
    availability = json["availability"] == null
        ? null
        : json["availability"] is String
            ? ConsultantAvailability.fromJson(
                jsonDecode(json["availability"].toString()))
            : ConsultantAvailability.fromJson(json["availability"]);
    availabilityTime = json["availability_time"] == null
        ? null
        : json["availability_time"] is String
            ? ConsultantAvailabilityTime.fromJson(
                jsonDecode(json["availability_time"]))
            : ConsultantAvailabilityTime.fromJson(json["availability_time"]);
    accountName = json['account_name']?.toString();
    accountNumber = json['account_number']?.toString();
    bank = json['bank']?.toString();
    booked = json['booked']?.toString();
    notification = int.tryParse(json['notification']?.toString() ?? '');
    regToken = json['regToken']?.toString();

    approvalStatus = int.tryParse(json['approval_status']?.toString() ?? '');
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['phone'] = phone;
    data['gender'] = gender;
    data['profile_img'] = profileImg;
    data['email'] = email;
    data['educational_qualification'] = educationalQualification;
    data['specialty'] = specialty;
    data['date_of_first_registration'] = dateOfFirstRegistration;
    data['category_of_membership'] = categoryOfMembership;
    data['NPA_reg_num'] = NPARegNum;
    data['last_dues'] = lastDues;
    data['reciept'] = reciept;
    data['address'] = address;
    data['experience'] = experience;
    data['rating'] = rating;
    if (languages != null) {
      data['languages'] = languages!.toJson();
    }
    data['bio'] = bio;
    data['hourly_rate'] = hourlyRate;
    if (availability != null) {
      data['availability'] = availability!.toJson();
    }
    if (availabilityTime != null) {
      data['availability_time'] = availabilityTime!.toJson();
    }
    data['account_name'] = accountName;
    data['account_number'] = accountNumber;
    data['bank'] = bank;
    data['booked'] = booked;
    data['notification'] = notification;
    data['regToken'] = regToken;

    data['approval_status'] = approvalStatus;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    return data;
  }
}
